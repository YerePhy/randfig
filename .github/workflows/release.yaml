name: Release
on:
  pull_request:
    branches:
      - 'main'
    types:
      - opened
      - synchronize
jobs:
  tests:
    if:  ${{ github.event.action }} == 'opened' ||  ${{ github.event.action }} == 'syncronized'
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --without docs
      - name: Install project
        run: poetry install --no-interaction --only-root
      - name: Run tests
        run: source .venv/bin/activate && pytest tests/
  docs:
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root --without docs
      - name: Install project
        run: poetry install --no-interaction --without docs
      - name: Install docs dependencies
        run: source .venv/bin/activate && pip install -r requirements-docs.txt
      - name: Make docs
        run: source .venv/bin/activate && cd docs && make html && touch _build/html/.nojekyll
      - name: Deploy GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
          destination_dir: docs
